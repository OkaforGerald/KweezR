@page "/game/{Id}"
@using KweezR.Client.HttpRepository
@inject IGameService GameService
@implements IAsyncDisposable

<div class="header">
    @if(GameState == GameState.Lobby)
    {
        <h1>LOBBY</h1>
    }
    else
    {
        <h1>GAME</h1>   
    }
</div>

@if(Lobby is null)
{
    <p style="color: #0f0;">Loading...</p>
}
else if(GameState == GameState.Lobby)
{
    <div class="container">
        <div class="room-details">
            <h2>Room Details</h2>
            <div class="pixel-box">
                <p>Name: @Lobby.Name</p>
                <p>Category: @Lobby.Category</p>
                <p>Questions: @Lobby.NumberOfQuestions</p>
                <p>Host: @Lobby.Players.First()</p>
                <p>Access: @Lobby.Access</p>
                <p>Max Players: @Lobby.Capacity</p>
            </div>
        </div>
        <div class="waiting-players">
            <h2>Waiting Players</h2>
            <ul>
                @foreach(var player in Lobby.Players)
                {
                    if (player.Equals(Lobby.Players.First()))
                    {
                        <li>@($"{player} (Host)")</li>
                    }
                    else
                    {
                        <li>@player</li>
                    }
                }
            </ul>
        </div>
    </div>
}else if (GameState == GameState.InProgress)
{
    @if (!Delay)
    {
        <div class="timer">
            Time remaining: @ElapsedTime seconds
        </div>
    }
    else
    {
        <div class="timer">
            Next Round begins in: @ElapsedTime seconds
        </div>
    }

    <div class="player-container">
        @for (int i = 0; i < Lobby.Players.Count; i++)
        {
            <div class="player-box" style="@GetPlayerBoxStyle(i)">
                <h3>@Lobby.Players[i]</h3>
                <p>Score: @PlayerScores[Lobby.Players[i]]</p>
            </div>
        }
    </div>
    @if (!Delay)
    {
        <div class="question-area">
            <h2>@((MarkupString)CurrentQuestion)</h2>
            <div class="options">
                @foreach (var option in CurrentOptions)
                {
                    <div class="option" @onclick="async () => await SelectAnswer(option)">
                        @((MarkupString)option)
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        @* Show brief info from last round *@
    }
}
<div class="chat-container">
        <div class="chat-history">
            @if (!Messages.Any())
            {
                <p style="color: #0f0;">No messages at this time!</p>
            }
            else
            {
                @foreach(var message in Messages)
                {
                    <div class="chat-message">@message</div>
                }
            }
        </div>
        <div class="chat-input">
            <input @bind-value = "@message" @bind-value:event="oninput" @onkeydown="@Enter" type="text" placeholder="Type your message...">
            <button @onclick = "BroadcastMessage" >Send</button>
        </div>
    </div>

